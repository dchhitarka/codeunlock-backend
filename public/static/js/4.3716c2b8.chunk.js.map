{"version":3,"sources":["components/Api/Reducers.js","components/Admin/Post.js","components/Utility/Popup.js","images/noimage.png","components/Posts/Post.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Post","props","useReducer","location","id","post","dispatch","useState","setLoading","post_title","post_body","post_image","post_status","postData","setPostData","setTags","preview","setPreview","postSlug","useParams","useEffect","fetchPost","then","res","ts","map","tag","push","console","log","parseInt","document","title","window","pathname","split","str","toUpperCase","slice","join","className","message","Preview","toggle","onSubmit","e","a","preventDefault","querySelectorAll","forEach","value","updatePost","style","flexDirection","justifyContent","to","name","onChange","target","required","defaultValue","selected","src","onError","noimage","width","height","alt","display","onClick","marginLeft","color","fontStyle","fontSize","length","rows","i","newTagInput","createElement","querySelector","appendChild","tagsList","removeChild","lastElementChild","marginBottom","Comments","postId","comments","dispatchComment","fetchComments","overflowX","comment","index","comment_body","comment_likes","formatDate","created_at","deleteComment","position","top","bottom","left","margin","zIndex","backgroundColor","border","overflowY","right","marginTop","Popup","includes","parentNode","remove","PostEngage","useContext","UserContext","userState","undefined","copied","setCopied","liked","setLiked","bookmarked","setBookmarked","likes","post_likes","bookmarks","post_bookmarks","activity","like","bookmark","status","setStatus","post_engagements","history","useHistory","isAuthenticated","transform","transition","setTimeout","engagePost","paddingTop","url","href","el","setAttribute","getElementsByTagName","select","setSelectionRange","execCommand","classList","add","PostBody","colors","alignItems","published_on","tag_slug","onMouseOver","opacity","onMouseLeave","children","components","code","node","inline","match","exec","String","replace","a11yDark","language","PreTag","PostComment","setComment","addComment","placeholder","padding","avatar"],"mappings":"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","file":"static/js/4.3716c2b8.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, { useState, useEffect, useReducer } from 'react'\n// import ReactMarkdown from 'react-markdown/with-html'\nimport \"../../css/Admin.css\";\nimport { Link, useParams } from 'react-router-dom';\nimport {formatDate} from '../Hooks';\nimport {fetchPost, updatePost, fetchComments, deleteComment} from '../Api/ActionCreators'; \nimport {commentReducer, postReducer} from '../Api/Reducers';\nimport Loading from '../Utility/Loading';\nimport {PostBody} from '../Posts/Post';\nimport noimage from '../../images/noimage.png'\nimport Popup from '../Utility/Popup';\n\nexport default function Post(props){\n    const [post, dispatch] = useReducer(postReducer, props.location.state ?? {loading: true, id: null})\n    const [loading, setLoading] = useState(true);\n    const [postData, setPostData] = useState({\n        post_title: \"\",\n        post_body: \"\",\n        post_image: \"\",\n        post_status: 0\n    })\n    const [tags, setTags] = useState([])\n    const [preview, setPreview] = useState(false)\n    const postSlug = useParams().post\n\n    useEffect(()=>{\n        fetchPost(postSlug, dispatch)\n        .then(res => {\n            let ts = []\n            res.tags.map(tag => ts.push(tag.tag))\n            console.log(postData)\n            setTags(ts)\n            setPostData({...postData, post_body: post.post_body, post_title: post.post_title, post_status: parseInt(post.post_status), post_image: post.post_image ?? \"\"}) //require('../../images/noimage.png')\n            setLoading(false);\n        })\n        document.title = (post?.post_title ?? window.location.pathname.split(\"/admin/posts/\")[1].split('-').map(str => str[0].toUpperCase() + str.slice(1)).join(\" \")) +\" | Admin | Codeunlock.in\"\n        // eslint-disable-next-line\n    }, [])\n    \n    return (\n        <div className=\"post-edit\">\n            <div className=\"popup\">\n                {post?.error && <Popup msg={post?.error} type=\"error\" />}\n                {post?.message && <Popup message={post?.message} type=\"success\" />}\n            </div>\n            {preview && <Preview post={postData} toggle={setPreview}/>}\n            {loading ? <Loading />\n            :<form className=\"post-form\"\n                onSubmit={async (e) => {\n                    e.preventDefault()\n                    const tags = []\n                    document.querySelectorAll(\".post_tags\").forEach(tag => tags.push(tag.value))\n                    // console.log(post.id, {...postData, tags: tags})\n                    await updatePost(post.id, {...postData, tags: tags}, dispatch)\n                }\n            }\n            >\n                <div className=\"form-header\" style={{flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                    <button className=\"form-button\">UPDATE</button>\n                    <div className=\"form-heading\">POST</div>\n                    <Link to=\"/admin/posts\"><button className=\"form-button unactive-button\">BACK</button></Link>\n                </div>\n                <div className=\"admin-post-top\">\n                    <div className=\"admin-post-top-left\">\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Title</label>\n                            <input type=\"text\" value={postData.post_title} name=\"post_title\" id=\"title\" onChange={e => setPostData({...postData, post_title: e.target.value})} required/>\n                        </div>\n                        \n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Status</label>\n                            <select name=\"post_status\" id=\"post_status\" onChange={e => setPostData({...postData, post_status: parseInt(e.target.value)})} required>\n                                <option value=\"0\" defaultValue={parseInt(postData.post_status) === 0 ? true: false} selected={parseInt(postData.post_status) === 0 ? true: false}>Draft</option>\n                                <option value=\"1\" defaultValue={parseInt(postData.post_status) === 1 ? true: false} selected={parseInt(postData.post_status) === 1 ? true: false}>Published</option>\n                            </select>\n                        </div>\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Image (Add Drive link where the image is stored)</label>\n                            <input type=\"text\" value={postData?.post_image ?? \"https://drive.google.com/uc?export=view&id=\"} onChange={e => setPostData({...postData, post_image: e.target.value})} />\n                        </div>\n\n                    </div>\n                    <div className='admin-post-top-right'>\n                        <img src={postData.post_image} onError={e => e.target.src = noimage} id=\"post_image\"  width=\"200\" height=\"200\" alt=\"Post Cover\"/>\n                    </div>\n                </div>\n                \n                <div className=\"form-input\">\n                    <label className=\"form-label\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <span>Body</span>\n                        <div style={{display: \"flex\"}}>\n                            {/* <Link to={{pathname: `/admin/post/preview`, state: {...postData, created_at: new Date(Date.now()).toISOString()}}}>Preview</Link><br /> */}\n                            <div onClick={() => setPreview(true)}>Preview</div>\n                            <div className=\"words-count\" style={{marginLeft: \"10px\", color: \"grey\", fontStyle: \"italic\", fontSize: \"15px\"}}>\n                                {`${post?.post_body?.split(\" \").length ?? 0} words`}\n                            </div>\n                        </div>\n                    </label>\n                    <textarea type=\"text\" rows=\"40\" value={postData.post_body} name=\"post_body\" id=\"post_body\" onChange={e => setPostData({...postData, post_body: e.target.value})} required/>\n                </div>\n                \n                <div className=\"form-input\">\n                    <label className=\"form-label\">Tags</label>\n                    \n                    <div className=\"tags-list\">\n                        {tags.map((tag, i) => <input type=\"text\" key={i} value={tag} name={`tags${i}`} id={`tags${i}`} onChange={() => {}} className=\"post_tags\" required/>)}\n                    </div>\n\n                    <div className=\"action-buttons\">\n                        <button className=\"form-button\" \n                            onClick={(e) => {\n                                e.preventDefault()\n                                let newTagInput = document.createElement(\"INPUT\")\n                                newTagInput.className =  \"post_tags\"\n                                document.querySelector('.tags-list').appendChild(newTagInput)\n                            }\n                        }>ADD</button>\n                        <button className=\"form-button unactive-button\" \n                            onClick={(e) => {\n                                e.preventDefault()\n                                let tagsList = document.querySelector(\".tags-list\")\n                                // if(tagsList.childElementCount > 1)\n                                tagsList.removeChild(tagsList.lastElementChild)\n                                // else\n                                //     alert(\"One tag is required\")\n                            }\n                        }>REMOVE</button>\n                    </div>\n\n                </div>\n\n                <div className=\"all-comments form-input\">\n                    <div className=\"heading\" style={{marginBottom: \"10px\"}}>Comments</div>\n                    <Comments postId={post.id}/>\n                </div>\n\n                {/* <div>\n                    <button className=\"form-button\">UPDATE</button>\n                    <Link to=\"/admin/posts\"><button className=\"form-button unactive-button\">BACK</button></Link>    \n                </div> */}\n            </form>\n        }\n        </div>\n    )\n}\n\nconst Comments = ({postId}) => {\n    const [comments, dispatchComment] = useReducer(commentReducer, [])\n\n    useEffect(()=>{\n        fetchComments(postId, dispatchComment);\n    }, [postId])\n\n    return comments.length === 0 ?  \n        <div>No comments available</div>\n        :  \n        <table className=\"table\" style={{overflowX: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th className=\"table-col-heading\">Id</th>\n                    <th className=\"table-col-heading\">User</th>\n                    <th className=\"table-col-heading\">Comment</th>\n                    <th className=\"table-col-heading\">Likes</th>\n                    <th className=\"table-col-heading\">Date</th>\n                    <th className=\"table-col-heading\">Delete</th>\n                </tr>\n            </thead> \n            <tbody>\n            {comments.map((comment, index) => {\n                return (\n                    <tr className=\"post-row\" key={index} style={{overflowX: \"scroll\"}}>\n                        <td>{comment.id}</td>\n                        <td>{comment.user.name}</td>\n                        <td>{comment.comment_body}</td>\n                        <td>{comment.comment_likes}</td>\n                        <td>{formatDate(comment.created_at)}</td>\n                        <td onClick={() => deleteComment(postId, comment.id, dispatchComment)}>Delete</td>\n                    </tr>\n                )}\n            )}\n            </tbody>\n        </table>\n}\n\nexport const Preview = ({post, toggle}) => {\n    // const history = useHistory();\n    const style = {\n        position: 'fixed',\n        top: \"50px\",\n        bottom: \"50px\",\n        left: \"5%\",\n        margin: \"25px 0\",\n        display: \"flex\", \n        flexDirection: 'column',\n        zIndex: \"100\",\n        backgroundColor: \"white\",\n        border: \"1px solid black\",\n        overflowY: \"scroll\",\n        width: \"90vw\"\n    }\n    return (\n        <div style={style}>\n            <button style={{position: 'absolute', right: \"0\", top: \"5px\"}} className=\"form-button unactive-button\" onClick={() => toggle(false)}>CLOSE</button>\n            <div style={{marginTop: \"250px\"}}>\n                <PostBody post={post} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport '../../css/Popup.css';\n\nexport default function Popup({message, type}){\n    if (message.includes('Successfully')) message = 'Post ' + message.split(' ')[1];\n    return (\n        <div className=\"inner\">\n            <div className=\"flash-messages\">\n                <div className={`flash flash--${type}`}>\n                    <p className=\"flash__text\">{message}</p>\n                    <button className=\"flash__remove\" onClick={e => e.target.parentNode.parentNode.remove()}>&times;</button>  \n                </div>\n            </div>\n        </div>          \n    )\n}","export default __webpack_public_path__ + \"static/media/noimage.3684e37c.png\";","import React, { useState, useReducer, useEffect, useContext } from 'react';\nimport {Link, useParams, useHistory} from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport {commentReducer, postReducer} from '../Api/Reducers';\nimport {fetchPost, fetchComments, addComment, engagePost} from '../Api/ActionCreators'; \nimport {formatDate} from '../Hooks';\nimport '../../css/Posts.css';\nimport '../../css/fontawesome/css/all.css';\nimport noimage from '../../images/noimage.png'\nimport Loading from '../Utility/Loading';\nimport Popup from '../Utility/Popup';\nimport { UserContext } from '../Context';\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nfunction PostEngage({post}){\n    const user = useContext(UserContext).userState;\n    const [copied, setCopied] = useState(undefined)\n    const [liked, setLiked] = useState(undefined)\n    const [bookmarked, setBookmarked] = useState(undefined)\n\n    const [activity, dispatch] = useReducer(postReducer, {\n        likes: post.post_likes || 0,\n        bookmarks: post.post_bookmarks || 0,\n    })\n\n    const [status, setStatus] = useState({like: 0, bookmark: 0})\n    \n    useEffect(() => {\n        if(post.post_engagements?.length > 0){\n            setStatus({\n                like: parseInt(post.post_engagements[0].like),\n                bookmark: parseInt(post.post_engagements[0].bookmark)\n            })\n        }\n    }, [post.post_engagements])\n\n    const history = useHistory();\n    return (\n        <>\n        <div className=\"popup\">\n            {liked && <Popup message={liked} type=\"success\"/>}\n            {bookmarked && <Popup message={bookmarked} type=\"success\"/>}\n            {copied && <Popup message={copied} type=\"success\" />}\n        </div>\n        <div className=\"post-engage\">\n            <div className=\"action like\">\n                <div className=\"post-like\"\n                    onClick={() => {\n                        if(user.isAuthenticated){\n                            document.querySelector(\".like-icon\").style.transform = \"scale(0.5, 0.5)\"\n                            document.querySelector(\".like-icon\").style.transition = \"0.1s\"\n                            setTimeout(() => {\n                                document.querySelector(\".like-icon\").style.transform = \"scale(1, 1)\"\n                            }, 100)\n                            engagePost(dispatch, post.id, user.id, \"like\").then(res => {\n                                status.like ? setStatus(status => ({...status, like: 0})) : setStatus(status => ({...status, like: 1}))  \n                                setLiked(res.message);\n                                setTimeout(() => setLiked(undefined), 2500);\n                            })\n                        }\n                        else{\n                            history.push(\"/u/login\");\n                        }\n                    }}\n                >\n                    <i className={status.like === 1 || status.like === true ? \"fas fa-thumbs-up like-icon\" : \"far fa-thumbs-up like-icon\"}><abbr title=\"Copy Link\"></abbr></i>                \n                </div>\n                <div className=\"stats\">{activity.likes}</div>\n            </div>\n            <div className=\"action bookmark\">\n                <div className=\"post-bookmark\"\n                    onClick={() => {\n                        if(user.isAuthenticated){\n                            document.querySelector(\".bookmark-icon\").style.transform = \"scale(0.5, 0.5)\"\n                            document.querySelector(\".bookmark-icon\").style.transition = \"0.1s\"\n                            setTimeout(() => {\n                                document.querySelector(\".bookmark-icon\").style.transform = \"scale(1, 1)\"\n                            }, 100)\n                            engagePost(dispatch, post.id, user.id, \"bookmark\").then(res => {\n                                status.bookmark ? setStatus(status => ({...status, bookmark: 0})) : setStatus(status => ({...status, bookmark: 1}))  \n                                setBookmarked(res.message);\n                                setTimeout(() => setBookmarked(undefined), 2500);\n                            })\n                        }\n                        else{\n                            history.push(\"/u/login\");\n                        }\n                    }}\n                >\n                    <i className={status.bookmark ? \"fas fa-bookmark bookmark-icon\" : \"far fa-bookmark bookmark-icon\"}></i>\n                </div>\n                <div className=\"book-stats\" style={{paddingTop: \"6px\"}}>{activity.bookmarks}</div>\n            </div>\n            <div className=\"action share\">\n                <div className=\"post-share\"\n                    onClick={(e) => {\n                        document.querySelector(\".share-icon\").style.transform = \"scale(0.5, 0.5)\"\n                        document.querySelector(\".share-icon\").style.transition = \"0.25s\"\n                        setTimeout(() => {\n                            document.querySelector(\".share-icon\").style.transform = \"scale(1, 1)\"\n                        }, 150)\n                        \n                        let url = window.location.href;\n                        let el = document.createElement(\"input\")\n                        el.setAttribute('type', 'text');\n                        el.setAttribute('value', url);\n                        el.setAttribute('id', \"url-copy\");\n                        document.getElementsByTagName('body')[0].appendChild(el)\n                        el.select();\n                        el.setSelectionRange(0, 99999); /*For mobile devices*/\n                        document.execCommand(\"copy\");\n                        document.getElementsByTagName('body')[0].removeChild(el);\n                        \n                        document.querySelector(\".share-icon\").classList.remove(\"far\")\n                        document.querySelector(\".share-icon\").classList.add(\"fas\")\n\n                        setTimeout(() => {\n                            document?.querySelector(\".share-icon\")?.classList?.add(\"far\")\n                            document?.querySelector(\".share-icon\")?.classList?.remove(\"fas\")\n                        }, 2500)\n                        setCopied(\"Link copied successfully!\");\n                        setTimeout(() => {setCopied(undefined)}, 2500)  \n                    }}\n                >\n                    <i className=\"far fa-copy share-icon\"></i>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport function PostBody({post}){\n    const colors = [\"red\", \"indigo\", \"blue\", \"green\", \"yellow\", \"orange\", \"violet\"];\n    return (\n        <section className=\"post\">\n            <h1 className=\"title\">{post.post_title}</h1>\n            <div className=\"metadata\">\n                <div className=\"post-date\" style={{display: \"flex\", alignItems: \"center\"}}>\n                    <span>Published On: {formatDate(post?.published_on ?? post?.created_at)}</span>\n                </div>    \n                <div className=\"post-tags\">\n                    {post.tags && post.tags.map((tag, index) => (\n                        <Link to={`/tags/${tag.tag_slug}`} key={index}>\n                            <span className=\"post-tag\" \n                                onMouseOver={e => e.target.style.opacity = \"0.8\"} \n                                onMouseLeave={e => e.target.style.opacity = \"1\"} \n                                style={{backgroundColor: colors[index]}} key={index}>{`#${tag.tag}`}\n                            </span>\n                        </Link>\n                    ))}\n                </div>\n\n            </div>\n            <img className=\"image\" onError={e => {e.target.src = noimage;e.target.style.display = \"none\"}} src={post.post_image ?? \"\"} alt=\"Post\" />\n            <div className=\"content\">\n                <ReactMarkdown \n                    children={post.post_body}\n                    components={{\n                        code({node, inline, className, children, ...props}) {\n                          const match = /language-(\\w+)/.exec(className || '')\n                          return !inline && match ? (\n                            <SyntaxHighlighter\n                              children={String(children).replace(/\\n$/, '')}\n                              style={a11yDark}\n                              language={match[1]}\n                              PreTag=\"div\"\n                              {...props}\n                            />\n                          ) : (\n                            <code className={className} {...props}>\n                              {children}\n                            </code>\n                          )\n                        }\n                    }} \n                />\n            </div>\n            <hr />\n        </section>\n    )\n}\n\nfunction PostComment({post}){\n    const user = useContext(UserContext).userState;\n    const [comments, dispatch] = useReducer(commentReducer, [])\n    const [comment, setComment] = useState(\"\")\n    const history = useHistory()\n    useEffect(()=>{\n        fetchComments(post.id, dispatch);\n    // eslint-disable-next-line\n    }, [])\n\n    return (\n        <section className=\"comments\">\n            <h1>Discussion</h1>\n            <span>You can use markdown in the comment box! :)</span>\n            <form className=\"new-comment\" \n                  onSubmit={e => {\n                        if(user.isAuthenticated){\n                            e.preventDefault()\n                            addComment({comment, postId: post.id}, dispatch)\n                            setComment(\"\")\n                        }\n                        else{\n                            history.push(\"/u/login\")\n                        }\n                      }\n                  } \n            >\n                <textarea className=\"comment-input\" value={comment} rows=\"5\" placeholder=\"Share your thoughts!\" \n                    onChange={e => setComment(e.target.value)} required />\n                <div className=\"comment-bottom\">\n                    <input type=\"submit\" value=\"SHARE\" className=\"comment-submit\"/>\n                </div>\n            </form>\n\n            <div className=\"all-comments\">\n                {comments.length > 0 && <h2 style={{padding: \"4px\"}}>{comments.length} Comments<hr /></h2>}\n                {comments.length > 0 && comments.map((comment, index) => (\n                    <div className=\"comment-box\" key={index}>\n                        <div className=\"comment-author\">\n                                <img src={comment.user.avatar} width=\"30\" height=\"30\" alt=\"User\" className=\"avatar\"/>\n                                <div className=\"author\">{comment.user.name}</div>\n                                <div className=\"comment-date\">{formatDate(comment.created_at)}</div>\n                        </div>\n                        <div style={{'margin':2, \"padding\": 5}}>\n                        <ReactMarkdown \n                            children={comment.comment_body}\n                            components={{\n                                code({node, inline, className, children, ...props}) {\n                                const match = /language-(\\w+)/.exec(className || '')\n                                return !inline && match ? (\n                                    <SyntaxHighlighter\n                                    children={String(children).replace(/\\n$/, '')}\n                                    style={a11yDark}\n                                    language={match[1]}\n                                    PreTag=\"div\"\n                                    {...props}\n                                    />\n                                ) : (\n                                    <code className={className} {...props}>\n                                    {children}\n                                    </code>\n                                )\n                                }\n                            }} \n                        />\n                        </div>\n                    </div>\n                    )\n                )}\n            </div>\n        </section>\n    )\n}\n\nfunction Post(){\n    const user = useContext(UserContext).userState; \n    let { postSlug } = useParams(); \n    const [post, dispatch] = useReducer(postReducer, {loading: true})\n    document.title = `${post?.post_title ?? window.location.pathname.split(\"/posts/\")[1].split('-').map(str => str[0].toUpperCase() + str.slice(1)).join(\" \")} | CodeUnlock.in`;\n    \n    useEffect(() => {\n        fetchPost(postSlug, dispatch, user.isAuthenticated)\n    // eslint-disable-next-line\n    }, [user.isAuthenticated])\n\n    return (\n        <>\n            {post.loading && <Loading />}\n            {!post.loading && (\n                <>\n                <PostEngage post={post}/>\n                <PostBody post={post}/>\n                <PostComment post={post}/>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default Post;"],"sourceRoot":""}