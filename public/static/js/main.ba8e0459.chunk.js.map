{"version":3,"sources":["components/Context.js","components/Api/config.js","components/Api/ActionCreators.js","components/Utility/Loading.js","components/Api/ActionTypes.js","components/Routes.js","components/Main.js","App.js","serviceWorker.js","index.js","components/Auth/UserAuth.js"],"names":["UserContext","React","createContext","user","setUser","config","localStorage","getItem","sessionStorage","token","headers","userLogin","credentials","dispatch","a","type","ActionTypes","fetch","BASE_URL","method","body","JSON","stringify","res","json","data","payload","error","userRegister","window","location","replace","userLogout","logout","verify","hash","email_hash","currentUrl","status","sendMailForVerification","email","forgot","message","reset","update","password","fetchUsers","fetchUser","user_id","console","deleteUser","fetchPosts","view","undefined","fetchSearch","query","fetchPost","postSlug","isAuthenticated","loading","log","engagePost","postId","userId","engage","post","fetchComments","post_id","addComment","comment","deleteComment","comment_id","fetchTags","fetchTag","tagSlug","followTag","tag_id","createPost","updatePost","deletePost","reload","updateTag","tagId","tag","deleteTag","Error","adminDashboard","Loading","className","FAILED","LOADING","FETCH_COMMENTS","ADD_COMMENT","DELETE_COMMENT","FETCH_TAGS","FETCH_TAG","TAG_ENGAGE","DELETE_TAG","FETCH_POSTS","FETCH_POST","DELETE_POST","POST_ENGAGE","FETCH_USERS","FETCH_USER","DELETE_USER","PrivateRouteAdmin","Component","component","rest","useContext","userState","render","props","isAdmin","to","pathname","state","from","AuthRoute","LoggedRoute","Admin","lazy","Posts","NewPost","EditPost","Preview","then","module","default","Tags","Tag","Users","Post","PostList","BookmarkedPost","LikedPost","TagList","TagView","Home","Dashboard","About","Contact","Header","Footer","Login","Register","ForgotPassword","ResetPassword","Verify","Verified","usePageTracking","history","useHistory","useState","initialized","setInitialized","useEffect","ReactGA","initialize","debug","listen","loc","action","pageview","search","withRouter","scroll","top","behavior","setLoading","setUserState","useMemo","authenticate","details","login","register","authenticateUser","contextObj","Provider","value","fallback","exact","path","prop","style","zIndex","position","bottom","right","backgroundColor","color","padding","fontSize","borderRadius","cursor","onClick","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker","UserAuth","this","sessionStorage_transfer","attachEvent","length","setItem","removeItem","id","parse","remember","access_token","clear","event","newValue","key"],"mappings":"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","file":"static/js/main.ba8e0459.chunk.js","sourcesContent":["import React from 'react';\n\nexport const UserContext = React.createContext({user:{}, setUser: () => {}});\n","import user from \"../Auth/UserAuth\"\n\nexport const config = {\n    \"BASE_URL\": \"https://codeunlock.in/api/v1/\",\n    // \"BASE_URL\": \"http://127.0.0.1:8000/api/v1/\",\n    \"AUTH_TOKEN\": localStorage.getItem(\"AUTH_TOKEN\") ?? sessionStorage.getItem(\"AUTH_TOKEN\") ?? user?.token ?? \"\",\n    headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': \"application/json\",//x-www-form-urlencoded\", //'multipart/form-data',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"AUTH_TOKEN\") ?? sessionStorage.getItem(\"AUTH_TOKEN\") ?? user?.token ?? \"\",\n        'Accept': 'application/json'\n    }\n}","import * as ActionTypes from './ActionTypes';\nimport {config} from './config';\n\n/****** */\n// AUTHENTICATION ACTIONS//\n/******* */\n\nexport const userLogin = async (credentials, dispatch) => {\n    let currentUrl = `auth/login`\n    dispatch({type: ActionTypes.LOADING})\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify(credentials),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_USER, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e.error})\n    }\n}\n\nexport const userRegister = async (credentials, dispatch) => {\n    let currentUrl = `auth/register`\n    dispatch({type: ActionTypes.LOADING})\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify(credentials),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: \"STOP_LOADING\"})\n        return data\n    }\n    catch(e){\n        window.location.replace('/register');\n        // dispatch({type: \"STOP_LOADING\"})\n        return e\n    }\n}\n\nexport const userLogout = async () => {\n    let currentUrl = `auth/logout`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        await res.json()\n        return {logout: true}\n    }\n    catch(e){\n        // console.log(e)\n    }\n}\n\n// Verify Email\nexport const verify = async (hash, email_hash) => {\n    let currentUrl = `auth/verify/${hash}/${email_hash}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return {...data, status: true}\n    }\n    catch(e){\n        // console.log(e)\n        return {error: e.error, status: false}\n    }\n}\n\nexport const sendMailForVerification = async (email) => {\n    let currentUrl = `auth/verify/mail`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify({'email': email}),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return {...data, status: true}\n    }\n    catch(e){\n        // console.log(e)\n        return {error: e.error, status: false}\n    }\n}\n\n// PASSWORD RESET\nexport const forgot = async (email) => {\n    try{\n        let currentUrl = 'auth/forgot';\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify({'email': email}),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return data;\n    }\n    catch(e){\n        // console.log(e)\n        if (e.message === 'NetworkError when attempting to fetch resource.')\n            return {error: 'Unable to send mail at the moment! Please try again!'}\n        return {error: e.message}\n    }\n}\n\nexport const reset = async (hash) => {\n    try{\n        let currentUrl = `auth/reset/${hash}`;\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json();\n        if(res.status === 410){\n            return {...data, status: 410}\n        }\n        return data;\n    }\n    catch(e){\n        // console.log(e)\n        return {error: e.error}\n    }\n}\n\nexport const update = async (hash, password) => {\n    try{\n        let currentUrl = `auth/update/${hash}`;\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify({'password': password}),\n            headers: config.headers,\n        })\n        let data = await res.json();\n        return data;\n    }\n    catch(e){\n        if(e.status === 410){\n            return {error: e.error}\n        }\n        // console.log(e)\n    }\n}\n\n\n/****** */\n// USERS ACTIONS//\n/******* */\nexport const fetchUsers = async (dispatch) => {\n    let currentUrl = `auth/users`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_USERS, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const fetchUser = async (user_id) => {\n    let currentUrl = `auth/user/${user_id}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return data;\n    }\n    catch (e){\n        console.error(e)\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const deleteUser = async (user_id, dispatch) => {\n    let currentUrl = `auth/user/${user_id}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"DELETE\",\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.DELETE_USER, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\n/****** */\n// POSTS ACTIONS//\n/******* */\n\nexport const fetchPosts = async (dispatch, user_id=null, view=undefined, sortby=undefined) => {\n    dispatch({type: ActionTypes.LOADING})\n    try{\n        let currentUrl;\n        switch(view){\n            case \"bookmarks\":\n                currentUrl = `posts/${user_id}/bookmarks`;\n                break;\n            case \"likes\":\n                currentUrl = `posts/${user_id}/likes`;\n                break;\n            case \"admin\":\n                currentUrl = \"admin/posts\";\n                break;\n            default:\n                currentUrl = \"posts\";\n                break;\n        }    \n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_POSTS, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const fetchSearch = async (query) => {\n    try{\n        let currentUrl = `search?q=${query}`\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return data\n    }\n    catch(e){\n        // console.log(e)\n    }    \n}\n\nexport const fetchPost = async (postSlug, dispatch, isAuthenticated) => {\n    dispatch({type: ActionTypes.LOADING})\n    let currentUrl = isAuthenticated ? `posts/${postSlug}/authenticated` : `posts/${postSlug}`;\n    if(isAuthenticated)\n        config.headers[\"Authorization\"] = \"Bearer \" + localStorage.getItem(\"AUTH_TOKEN\") ?? sessionStorage.getItem(\"AUTH_TOKEN\");\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_POST, payload: data})\n        return {...data, loading: false}\n    }\n    catch(e){\n        console.log(e)\n        window.location.replace(\"/\")\n    }\n}\n\nexport const engagePost = async (dispatch, postId, userId, engage) => {\n    let currentUrl = `posts/${postId}/${userId}/${engage}`\n    let post = {\n        postId,\n        userId\n    }\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n            method: 'PUT',\n            body: JSON.stringify(post)\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.POST_ENGAGE, payload: data})\n        return data;\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\n// export const deletePost = async (post_id, dispatch) => {\n//     let currentUrl = `posts/${post_id}`\n//     try{\n//         // let res = await fetch(config.BASE_URL + currentUrl, {\n//         //     method: \"DELETE\",\n//         //     headers: config.headers,\n//         // })\n//         let data = {message: \"DELETED\"}//await res.json()\n//         dispatch({type: ActionTypes.DELETE_POST, payload: data})\n//     }\n//     catch(e){\n//         dispatch({type: ActionTypes.FAILED, payload: e})\n//     }\n// }\n\n\n/****** */\n// COMMENTS ACTIONS//\n/******* */\nexport const fetchComments = async (post_id, dispatch) => {\n    let currentUrl = `posts/${post_id}/comments`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_COMMENTS, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const addComment = async (comment, dispatch) => {\n    let currentUrl = `posts/${comment.postId}/comments`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: 'POST',\n            body: JSON.stringify(comment),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.ADD_COMMENT, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const deleteComment = async (post_id, comment_id, dispatch) => {\n    let currentUrl = `posts/${post_id}/comment/${comment_id}`\n    try{\n        await fetch(config.BASE_URL + currentUrl, {\n            method: \"DELETE\",\n            headers: config.headers,\n        })\n        let data = {message: \"DELETED\"}//await res.json()\n        dispatch({type: ActionTypes.DELETE_COMMENT, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\n/****** */\n// TAGS ACTIONS//\n/******* */\nexport const fetchTags = async (dispatch) => {\n    dispatch({type: ActionTypes.LOADING})\n    let currentUrl = `tags`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_TAGS, payload: data})\n    }\n    catch(e){\n        window.location.replace('/');\n        dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const fetchTag = async (dispatch, tagSlug) => {\n    dispatch({type: ActionTypes.LOADING})\n    let currentUrl = `tags/${tagSlug}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_TAG, payload: data})\n    }\n    catch(e){\n        window.location.replace('/tags');\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\nexport const followTag = async (tag_id, user_id) => {\n    let currentUrl = `tags/${tag_id}/${user_id}/follow`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"PUT\",\n            headers: config.headers,\n        })\n        let data = await res.json()\n        // dispatch({type: ActionTypes.TAG_ENGAGE, payload: data})\n        return data\n    }\n    catch(e){\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n    }\n}\n\n\n// ADMIN SECTION\n// POST\nexport const createPost = async (post) => {\n    let currentUrl = `posts`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"POST\",\n            body: JSON.stringify(post),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        // dispatch({type: ActionTypes.FETCH_POST, payload: data})\n        return data\n    }\n    catch(e){\n        return {\"error\": e}\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n        // return e.message;\n        // window.location.replace(\"/admin/posts\")\n    }\n}\n\nexport const updatePost = async (postId, post, dispatch) => {\n    dispatch({type: \"LOADING\"})\n    let currentUrl = `posts/${postId}/update`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"PUT\",\n            body: JSON.stringify(post),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: \"EDIT_POST\", payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.FAILED, payload: e})\n        // window.location.reload()\n    }\n}\n\nexport const deletePost = async (postId, dispatch) => {\n    let currentUrl = `posts/${postId}`\n    // return \"Post Deleted Successfully\"\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"DELETE\",\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.DELETE_POST, payload: data})\n    }\n    catch(e){\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n        window.location.reload()\n    }\n}\n\n// TAG\nexport const createTag = async (tag, dispatch) => {\n    let currentUrl = `tags`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"POST\",\n            body: JSON.stringify(tag),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_TAG, payload: data})\n    }\n    catch(e){\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n        window.location.replace(\"/admin/tags\")\n    }\n}\n\nexport const updateTag = async (tagId, tag, dispatch) => {\n    let currentUrl = `tags/${tagId}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"PUT\",\n            body: JSON.stringify(tag),\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.FETCH_TAG, payload: data})\n    }\n    catch(e){\n        // dispatch({type: ActionTypes.FAILED, payload: e})\n        window.location.reload()\n    }\n}\n\nexport const deleteTag = async (dispatch, tag_id) => {\n    let currentUrl = `tags/${tag_id}`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"DELETE\",\n            headers: config.headers,\n        })\n        let data = await res.json()\n        dispatch({type: ActionTypes.DELETE_TAG, payload: data})\n    }\n    catch(e){\n        dispatch({type: ActionTypes.DELETE_TAG, payload: new Error(\"Unable to Delete the tag. Please try again!\")})\n        // return new Error(\"Unable to Delete the tag. Please try again!\")\n        // window.location.replace()\n    }\n}\n\nexport const adminDashboard = async () => {\n    let currentUrl = `admin/dashboard`\n    try{\n        let res = await fetch(config.BASE_URL + currentUrl, {\n            method: \"GET\",\n            headers: config.headers,\n        })\n        let data = await res.json()\n        return data;\n        // dispatch({type: ActionTypes.DELETE_TAG, payload: data})\n    }\n    catch(e){\n        // dispatch({type: ActionTypes.DELETE_TAG, payload: new Error(\"Unable to Delete the tag. Please try again!\")})\n        return new Error(\"Unable to Delete the tag. Please try again!\")\n        // window.location.replace()\n    }\n}\n","import React from 'react';\nimport '../../css/Loading.css';\n\nexport default function Loading(){\n    return (\n        <>\n        <div className=\"loader-overflow\"></div>\n        <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n        </div>\n        </>\n    )\n}","export const POST_LOADING = 'POST_LOADING';\nexport const COMMENTS_LOADING = 'COMMENTS_LOADING';\nexport const TAGS_LOADING = 'TAGS_LOADING';\nexport const USERS_LOADING = 'USERS_LOADING';\n\nexport const FAILED = 'FAILED';\nexport const LOADING = 'LOADING';\n\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const COMMENT_ENGAGE = 'COMMENT_ENGAGE';\nexport const COMMENT_FAILED = 'COMMENT_FAILED';\n\nexport const FETCH_TAGS = 'FETCH_TAGS';\nexport const FETCH_TAG = 'FETCH_TAG';\nexport const TAG_ENGAGE = 'TAG_ENGAGE';\nexport const ADD_TAG = 'ADD_COMMENT';\nexport const DELETE_TAG = 'DELETE_TAG';\nexport const EDIT_TAG = 'EDIT_TAG';\nexport const TAG_FAILED = 'TAG_FAILED';\n\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const FETCH_POST = 'FETCH_POST';\nexport const ADD_POST = 'ADD_POST ';\nexport const EDIT_POST = 'EDIT_POST ';\nexport const DELETE_POST = 'DELETE_POST ';\nexport const POST_FAILED = 'POST_FAILED';\nexport const POST_ENGAGE = 'POST_ENGAGE';\n\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USER = 'FETCH_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const USERS_FAILED = 'USERS_FAILED';\n\n","import React, {useContext} from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport { UserContext } from './Context';\n\nexport const PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n  const user = useContext(UserContext).userState;\n  return (\n    <Route {...rest} render={(props) => (\n      (user?.isAdmin === 1)\n        ?\n        <Component {...props} />\n        : <Redirect to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }} />\n    )} />\n  )\n}\n\nexport const AuthRoute = ({ component: Component, ...rest }) => {\n  const user = useContext(UserContext).userState;\n  return (\n    <Route {...rest} render={(props) => (\n      (user.isAuthenticated === false || user.isAuthenticated === undefined)\n        ?\n        <Component {...props} />\n        : <Redirect to={{\n            pathname: '/',\n          }} />\n    )} />\n  )\n}\n\nexport const LoggedRoute = ({ component: Component, ...rest }) => {\n  const user = useContext(UserContext).userState;\n  return (\n    <Route {...rest} render={(props) => (\n      user.isAuthenticated === true\n        ?\n        <Component {...props} />\n        : <Redirect to={{\n            pathname: '/',\n          }} />\n    )} />\n  )\n}\n","import React, { useMemo, useState, useEffect, lazy, Suspense } from 'react'\nimport { Switch, Route, Redirect, withRouter, useHistory } from 'react-router-dom';\nimport { UserContext } from './Context';\nimport ReactGA from 'react-ga';\nimport '../css/index.css'\n\nimport user from './Auth/UserAuth'\n\nimport Loading from './Utility/Loading';\n\nimport {PrivateRouteAdmin, AuthRoute, LoggedRoute} from './Routes';\n// import Admin from './Admin/Admin'\n// import Posts from './Admin/Posts'\n// import EditPost, {Preview} from './Admin/Post'\n// import NewPost from './Admin/NewPost'\n// import Tags from './Admin/Tags'\n// import Tag from './Admin/Tag'\n// import Users from './Admin/Users'\n// import NotFound404 from './NotFound'\n// import Login from './Auth/Login'\n// import {Verify, Verified} from './Auth/Verification'\n// import Register from './Auth/Register'\n// import Header from './Utility/Header';\n// import Loading from './Utility/Loading';\n// import Footer from './Utility/Footer';\n// import Home from './Pages/Home';\n// import Dashboard from './Pages/Dashboard';\n// import PostList, {BookmarkedPost, LikedPost} from './Posts/PostList';\n// import Post from './Posts/Post';\n// import TagList from './Tags/Tags';\n// import TagView from './Tags/Tag';\n// import About from './Pages/About';\n// import Contact from './Pages/Contact';\n\n// ADMIN PAGES\nconst Admin = lazy(() => import('./Admin/Admin'));\nconst Posts = lazy(() => import('./Admin/Posts'));\nconst NewPost = lazy(() => import('./Admin/NewPost'));\nconst EditPost = lazy(() => import('./Admin/Post'));\nconst Preview = lazy(() => import('./Admin/Post').then(module => ({ default: module.Preview }))); \nconst Tags = lazy(() => import('./Admin/Tags'));\nconst Tag = lazy(() => import('./Admin/Tag'));\nconst Users = lazy(() => import('./Admin/Users'));\n\n// POST PAGES\nconst Post = lazy(() => import('./Posts/Post'));\nconst PostList = lazy(() => import('./Posts/PostList'));\nconst BookmarkedPost = lazy(() => import('./Posts/PostList').then(module => ({ default: module.BookmarkedPost })));\nconst LikedPost = lazy(() => import('./Posts/PostList').then(module => ({ default: module.LikedPost })));\n\n// TAG PAGES\nconst TagList = lazy(() => import('./Tags/Tags'));\nconst TagView = lazy(() => import('./Tags/Tag'));\n\n// OTHER PAGES\nconst Home = lazy(() => import('./Pages/Home'));\nconst Dashboard = lazy(() => import('./Pages/Dashboard'));\nconst About = lazy(() => import('./Pages/About'));\nconst Contact = lazy(() => import('./Pages/Contact'));\n\n// LAYOUT COMPONENTS\nconst Header = lazy(() => import('./Utility/Header'));\nconst Footer = lazy(() => import('./Utility/Footer'));\n\n// AUTH PAGES\nconst Login = lazy(() => import('./Auth/Login'))\nconst Register = lazy(() => import('./Auth/Register'))\nconst ForgotPassword = lazy(() => import('./Auth/Password').then(module => ({ default: module.ForgotPassword }))); \nconst ResetPassword = lazy(() => import('./Auth/Password').then(module => ({ default: module.ResetPassword })));\nconst Verify = lazy(() => import('./Auth/Verification').then(module => ({ default: module.Verify })));\nconst Verified = lazy(() => import('./Auth/Verification').then(module => ({ default: module.Verified })));\n\nfunction initialiseAnalytics() {\n  const TRACKING_ID = \"UA-179116638-1\";\n  ReactGA.initialize(TRACKING_ID, {debug: false});\n}\n\nfunction usePageTracking() {\n    const history = useHistory();\n    const [initialized, setInitialized] = useState(false);\n  \n    useEffect(() => {\n      initialiseAnalytics();\n      setInitialized(true);\n    }, []);\n  \n    useEffect(() => {\n      if (initialized) {\n          history.listen((loc, action) => {\n              ReactGA.pageview(loc.pathname + loc.search);\n          })\n      }\n    }, [initialized, history]);\n  }\nfunction Main(props){\n    window.scroll({ top: 0, behavior: 'smooth' })\n    const [loading, setLoading] = useState(true);\n    const [userState, setUserState] = useState({})\n    \n    useMemo(() => {\n        const authenticateUser = async () => {\n            await user.authenticate();\n            setUserState({...user.details, isAuthenticated: user.isAuthenticated, login: user.login, logout: user.logout, register: user.register})\n            setLoading(false);\n        }\n        authenticateUser();\n    }, [])\n\n    const footerStyle = {\n        zIndex: \"120\", \n        position: \"fixed\", \n        bottom: \"10px\", \n        right: \"5px\", \n        backgroundColor: \"var(--secondary)\", \n        color: \"white\", \n        padding: \"8px\", \n        fontSize: \"20px\", \n        borderRadius: \"4px\", \n        cursor: \"pointer\"\n    }\n    const contextObj = {userState, setUserState}\n\n    usePageTracking();\n\n    if(loading)\n        return <Loading />\n    return (\n        <UserContext.Provider value={contextObj}>\n        <Suspense fallback={<Loading />}>\n            <Header />\n            <div className=\"container\">\n                <Switch location={props.location}>\n                    <Route exact path ='/posts' component={PostList} />\n                    <Route exact path ='/u/bookmarks' component={BookmarkedPost} />\n                    <Route exact path ='/u/likes' component={LikedPost} />\n                    <Route exact path ='/posts/:postSlug' component={Post} />\n\n                    <Route exact path='/tags' component={TagList} />\n                    <Route exact path='/tags/:slug' component={TagView} />\n                    <Route exact path='/about' component={About} />\n                    <Route exact path='/contact' component={Contact} />\n\n                    <LoggedRoute exact path='/u/dashboard' component={Dashboard} />\n                    <AuthRoute exact path='/u/login' component={Login} />\n                    <AuthRoute exact path='/u/register' component={Register} />\n                    <AuthRoute exact path='/u/verify' component={prop => <Verify props={props.location.state}/>} />\n                    <AuthRoute exact path='/u/verify/:hash/:email_hash' component={Verified} />\n                    <AuthRoute exact path='/u/forgot' component={ForgotPassword} />\n                    <AuthRoute exact path='/u/reset/:hash' component={ResetPassword} />\n\n                    <PrivateRouteAdmin path ='/admin/post/create' component={NewPost} />\n                    <PrivateRouteAdmin path ='/admin/posts/:post' component={EditPost} />\n                    <PrivateRouteAdmin path ='/admin/post/preview' component={prop => <Preview post={prop.location.state}/>} />\n                    <PrivateRouteAdmin path ='/admin/tags/:tag' component={Tag} />\n                    <PrivateRouteAdmin path ='/admin/tags' component={Tags} />\n                    <PrivateRouteAdmin path =\"/admin/users\" component={Users} />\n                    <PrivateRouteAdmin path ='/admin/posts' component={Posts} />\n                    <PrivateRouteAdmin path ='/admin' component={Admin} />\n\n                    <Route exact path ='/' component={Home} />\n                    <Redirect to=\"/\" component={Home/*NotFound404*/}/>\n                </Switch>\n            </div>\n\n            <div style={footerStyle}\n                onClick={() => {\n                    window.scroll({ top: 0, behavior: 'smooth' })\n                }}\n            >\n                <i className=\"fas fa-chevron-up\"></i>\n            </div>\n            <Footer />\n        </Suspense>\n        </UserContext.Provider>\n    )\n}\n\nexport default withRouter(Main);","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/Main';\n\nfunction App() {\n    return (\n      <BrowserRouter>\n          <Main />\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import {userLogout, fetchUser} from '../Api/ActionCreators'\n\nclass UserAuth{\n    token;\n    details = null;\n    isAuthenticated = false;\n    \n    static user = new UserAuth();\n\n    constructor(){        \n        // Transfer sessionStorage from one tab to another\n        if(window.addEventListener) {\n            window.addEventListener(\"storage\", this.sessionStorage_transfer, false);\n        } else {\n            window.attachEvent(\"onstorage\", this.sessionStorage_transfer);\n        };\n        if (!sessionStorage.length) {\n            localStorage.setItem('getSessionStorage', 'foobar');\n            localStorage.removeItem('getSessionStorage', 'foobar');\n        };    \n\n        this.token = sessionStorage.getItem(\"AUTH_TOKEN\") ?? localStorage.getItem(\"AUTH_TOKEN\") ?? null;\n        this.id = sessionStorage.getItem(\"USER_ID\") ?? localStorage.getItem(\"USER_ID\") ?? null;\n    }\n    \n    async authenticate(){\n        if(this.token != null && this.id != null){\n            this.details = JSON.parse(sessionStorage.getItem(\"details\")) ?? null\n            if(!this.details){\n                this.details = await fetchUser(this.id)\n                sessionStorage.setItem(\"details\", JSON.stringify(this.details))\n                this.isAuthenticated = true;\n            }\n            this.isAuthenticated = true;\n        }\n    }\n    \n    async login(user, remember){\n        if (remember === true) {\n            localStorage.setItem(\"AUTH_TOKEN\", user.access_token)\n            localStorage.setItem(\"USER_ID\", user.id)\n        }\n        else {\n            sessionStorage.setItem(\"AUTH_TOKEN\", user.access_token)\n            sessionStorage.setItem(\"USER_ID\", user.id)\n        }\n        sessionStorage.setItem(\"details\", JSON.stringify(user))\n        this.details = user;\n        this.id = user.id;\n        this.token = user.access_token;\n        this.isAuthenticated = true;\n    }\n\n    async logout(){\n        await userLogout()\n        sessionStorage.clear();\n        localStorage.clear();\n        this.details = null;\n        this.token = null;\n        this.id = null;\n        this.isAuthenticated = false;        \n    }\n\n    register(){\n        console.log(\"Register\")\n    }\n\n    async sessionStorage_transfer(event) {\n        if(!event) { event = window.event; } // ie suq\n        if(!event.newValue) return;          // do nothing if no value to work with\n        if (event.key === 'getSessionStorage') {\n          // another tab asked for the sessionStorage -> send it\n          localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage));\n          // the other tab should now have it, so we're done with it.\n          localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.\n        } else if (event.key === 'sessionStorage' && !sessionStorage.length) {\n          // another tab sent data <- get it\n          var data = JSON.parse(event.newValue);\n          for (var key in data) {\n            sessionStorage.setItem(key, data[key]);\n          }\n        }\n        this.isAuthenticated = true;\n      };\n}\n\nexport default UserAuth.user"],"sourceRoot":""}