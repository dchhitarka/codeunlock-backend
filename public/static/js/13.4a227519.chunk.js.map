{"version":3,"sources":["components/Admin/NewPost.js","components/Utility/Popup.js","images/noimage.png"],"names":["NewPost","useState","post_title","post_body","post_image","undefined","post_status","post","setPost","msg","setMsg","err","setErr","document","title","className","message","type","onSubmit","e","preventDefault","tags","querySelectorAll","forEach","tag","push","value","createPost","then","res","error","style","flexDirection","justifyContent","to","name","id","onChange","target","placeholder","required","parseInt","defaultValue","src","onError","noimage","width","height","alt","display","color","fontStyle","fontSize","length","split","rows","onClick","newTagInput","createElement","querySelector","appendChild","tagsList","childElementCount","removeChild","lastElementChild","alert","Popup","includes","parentNode","remove"],"mappings":"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","file":"static/js/13.4a227519.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport \"../../css/Auth.css\";\nimport { Link } from 'react-router-dom';\nimport {createPost} from '../Api/ActionCreators'; \n// import {postReducer} from '../Api/Reducers';\nimport Popup from '../Utility/Popup';\nimport noimage from '../../images/noimage.png'\n\nexport default function NewPost(){\n    const [post, setPost] = useState({\n        post_title: \"\",\n        post_body: \"\",\n        post_image: undefined,\n        post_status: 0\n    })\n    const [msg, setMsg] = useState(undefined);\n    const [err, setErr] = useState(undefined);\n    // const [p, dispatch] = useReducer(postReducer, {})\n\n    document.title = \"Create New Post | Admin | CodeUnlock.in\";\n\n    return (\n        <div className=\"post-edit\">\n            {msg && <Popup message={msg} type='success' />}\n            {err && <Popup message={err} type='error' />}\n            <form className=\"post-form\" \n                onSubmit={e => {\n                    e.preventDefault();\n                    const tags = []\n                    document.querySelectorAll(\".post_tags\").forEach(tag => tags.push(tag.value))\n                    createPost({...post, tags: tags})\n                    .then(res => {\n                        setErr(res?.error ?? undefined)\n                        setMsg(res?.message ?? undefined)\n                        // window.location.replace(\"/admin/posts\")\n                    })\n                    // .catch(e)\n                }\n            }>\n                <div className=\"form-header\" style={{flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                    <button className=\"form-button\">CREATE</button>\n                    <div className=\"form-heading\">NEW POST</div>\n                    <Link to=\"/admin/posts\"><button className=\"form-button unactive-button\">BACK</button></Link>\n                </div>\n                <div className=\"admin-post-top\">\n                    <div className=\"admin-post-top-left\">\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Title</label>\n                            <input type=\"text\" value={post.post_title} name=\"post_title\" id=\"title\" onChange={e => setPost({...post, post_title: e.target.value})} placeholder=\"Add New Title\" required/>\n                        </div>\n\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Status</label>\n                            <select name=\"post_status\" id=\"post_status\" onChange={e => setPost({...post, post_status: parseInt(e.target.value)})} required>\n                                <option value=\"0\" defaultValue={post.post_status ? true: false}>Draft</option>\n                                <option value=\"1\" defaultValue={post.post_status ? true: false}>Published</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">Image (Add Drive link where the image is stored)</label>\n                            <input type=\"text\" value={post.post_image ?? \"https://drive.google.com/uc?export=view&id=\"} onChange={e => setPost({...post, post_image: e.target.value})} />\n                        </div>\n                    </div>\n                    <div className='admin-post-top-right'>\n                        <img src={post.post_image} onError={e => e.target.src = noimage} id=\"post_image\"  width=\"200\" height=\"200\" alt=\"Post Cover\"/>\n                    </div>\n                </div>\n    \n                <div className=\"form-input\">\n                    <label className=\"form-label\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <span>Body</span>\n                        <div className=\"words-count\" style={{color: \"grey\", fontStyle: \"italic\", fontSize: \"15px\"}}>\n                            {post.post_body.length === 0 ? '0 words' : `${post.post_body.split(\" \").length} words`}\n                        </div>\n                    </label>\n                    {/* <Editor editorState={editorState} onChange={setEditorState} /> */}\n                    <textarea type=\"text\" rows=\"50\" value={post.post_body} name=\"post_body\" id=\"post_body\" onChange={e => setPost({...post, post_body: e.target.value})} required/>\n                </div>\n\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Tags</label>\n                    \n                    <div className=\"tags-list\">\n                        <input type=\"text\" name=\"tags\" className=\"post_tags\" required/>\n                    </div>\n\n                    <div className=\"action-buttons\">\n                        <button className=\"form-button\" \n                            onClick={(e) => {\n                                e.preventDefault()\n                                let newTagInput = document.createElement(\"INPUT\")\n                                newTagInput.className =  \"post_tags\"\n                                newTagInput.required = true;\n                                document.querySelector('.tags-list').appendChild(newTagInput)\n                            }\n                        }>ADD</button>\n                        <button className=\"form-button unactive-button\" \n                            onClick={(e) => {\n                                e.preventDefault()\n                                let tagsList = document.querySelector(\".tags-list\")\n                                if(tagsList.childElementCount > 1)\n                                    tagsList.removeChild(tagsList.lastElementChild)\n                                else\n                                    alert(\"One tag is required\")\n                            }\n                        }>REMOVE</button>\n                    </div>\n                </div>\n\n                {/* <div>\n                    <button className=\"form-button\">CREATE</button>\n                    <Link to=\"/admin/posts\"><button className=\"form-button unactive-button\">BACK</button></Link>    \n                </div> */}\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport '../../css/Popup.css';\n\nexport default function Popup({message, type}){\n    if (message.includes('Successfully')) message = 'Post ' + message.split(' ')[1];\n    return (\n        <div className=\"inner\">\n            <div className=\"flash-messages\">\n                <div className={`flash flash--${type}`}>\n                    <p className=\"flash__text\">{message}</p>\n                    <button className=\"flash__remove\" onClick={e => e.target.parentNode.parentNode.remove()}>&times;</button>  \n                </div>\n            </div>\n        </div>          \n    )\n}","export default __webpack_public_path__ + \"static/media/noimage.3684e37c.png\";"],"sourceRoot":""}