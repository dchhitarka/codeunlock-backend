{"version":3,"sources":["components/Api/Reducers.js","components/Tags/TagCard.js","components/Tags/Tags.js","components/Utility/Popup.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","TagCard","tag","index","useContext","UserContext","userState","useState","showPopup","setShowPopup","setMsg","setType","follows","engagements","find","u","parseInt","user_id","id","followers","message","status","setStatus","history","useHistory","className","Popup","to","tag_slug","onClick","isAuthenticated","followTag","then","res","console","log","setTimeout","push","description","post_count","TagList","useReducer","dispatch","document","title","useEffect","fetchTags","Loading","style","fontSize","marginRight","length","Object","entries","map","includes","split","e","target","parentNode","remove"],"mappings":"gQAEaA,EAAc,SAACC,EAAOC,GAC/B,OAAOA,EAAOC,MACV,KAAKC,IACD,MAAO,CAACC,SAAS,GACrB,KAAKD,IACD,MAAO,CAACE,MAAOJ,EAAOK,QAASF,SAAS,GAC5C,KAAKD,IAEL,IAAK,YACD,OAAO,2BAAIF,EAAOK,SAAlB,IAA2BF,SAAS,IACxC,KAAKD,IACL,KAAKA,IACD,OAAO,2BAAIF,EAAOK,SAAlB,IAA2BF,SAAS,IACxC,KAAKD,IACD,MAAO,CAACI,IAAKN,EAAOK,QAASF,SAAS,EAAOI,OAAO,GACxD,QACI,OAAOR,IAINS,EAAa,SAACT,EAAOC,GAC9B,OAAOA,EAAOC,MACV,KAAKC,IACD,OAAO,2BAAIH,GAAX,IAAkBI,SAAS,IAC/B,KAAKD,IACD,MAAO,CAACO,KAAMT,EAAOK,QAASF,SAAS,GAC3C,KAAKD,IACL,KAAKA,IACL,KAAKA,IACL,KAAKA,IAED,OAAO,2BAAIF,EAAOK,SAAlB,IAA2BF,SAAS,IACxC,QACI,OAAOJ,IAINW,EAAc,SAACX,EAAOC,GAC/B,OAAOA,EAAOC,MACV,KAAKC,IACD,OAAO,2BAAIH,GAAX,IAAkBI,SAAS,IAC/B,KAAKD,IACD,OAAOF,EAAOK,QAClB,KAAKH,IACD,MAAO,CAACS,KAAMX,EAAOK,QAASF,SAAS,GAC3C,KAAKD,IACL,KAAKA,IACD,MAAO,CAACS,KAAM,KAAMJ,MAAOP,EAAOK,QAASF,SAAS,GACxD,IAAK,eACD,OAAO,2BAAKJ,GAAZ,IAAmBI,SAAS,IAChC,QACI,OAAOJ,IAINa,EAAiB,SAACb,EAAOC,GAClC,OAAOA,EAAOC,MAGV,KAAKC,IACL,KAAKA,IACL,KAAKA,IACL,KAAKA,IACD,OAAOF,EAAOK,QAClB,QACI,OAAON,K,oMC5DNc,EAAU,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACpBJ,EAAOK,qBAAWC,KAAaC,UACrC,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsBF,qBAAtB,mBAAOb,EAAP,KAAYgB,EAAZ,KACA,EAAwBH,qBAAxB,mBAAOlB,EAAP,KAAasB,EAAb,KAEA,EAA4BJ,oBAAS,WAEjC,MAAO,CACHK,UAFUV,EAAIW,YAAYC,MAAK,SAAAC,GAAC,OAAIC,SAASD,EAAEE,WAAaD,SAASjB,EAAKmB,OAG1EC,UAAWjB,EAAIiB,UACfC,QAAS,OALjB,mBAAOC,EAAP,KAAeC,EAAf,KASMC,EAAUC,cAChB,OACI,sBAAiBC,UAAU,WAA3B,UACKjB,GAAa,cAACkB,EAAA,EAAD,CAAON,QAAS1B,EAAKL,KAAMA,IACzC,sBAAKoC,UAAU,cAAf,UACI,cAAC,IAAD,CAAME,GAAE,gBAAWzB,EAAI0B,UAAvB,SAAmC,sBAAKH,UAAU,MAAf,cAAuBvB,EAAIA,SAC9D,wBACI2B,QAAS,WACF9B,EAAK+B,gBACJC,YAAU7B,EAAIgB,GAAInB,EAAKmB,IAAIc,MAAK,SAAAC,GAC5BZ,EAAOT,QAAUU,EAAUW,GAE3B,IAAMb,EAAUa,EAAIrB,QAAU,gBAAkB,iBAChDsB,QAAQC,IAAIf,GACZV,EAAOU,GACPT,EAAQ,WACRF,GAAa,GACb2B,YAAW,kBAAM3B,GAAa,KAAQ,SAI1Cc,EAAQc,KAAK,WAGrBZ,UAAWJ,EAAOT,QAAP,+CAAyDT,GAAzD,iDAA6GA,GAlB5H,SAoBKkB,EAAOT,QAAU,YAAc,cAGxC,sBAAKa,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAf,SAA8C,MAAnBvB,EAAIoC,YAAsBpC,EAAIoC,YAAc,sBAAMb,UAAU,UAAhB,yCACvE,sBAAKA,UAAU,aAAf,UAA6BvB,EAAIqC,WAAjC,YAAsDlB,EAAOF,WAAa,EAA1E,qBA7BEhB,IChBH,SAASqC,IACpB,MAAyBC,qBAAW7C,IAAY,CAACC,KAAM,GAAIN,SAAS,IAApE,mBAAOM,EAAP,KAAa6C,EAAb,KAMA,OALAC,SAASC,MAAQ,uBACjBC,qBAAU,WACNC,YAAUJ,KACX,IAGC,mCACK7C,EAAKN,QAAU,cAACwD,EAAA,EAAD,IAChB,qCACA,sBAAKtB,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAcuB,MAAO,CAACC,SAAU,OAAQC,YAAa,SAClE,2CAEJ,qBAAKzB,UAAU,WAAf,SAC0B,IAArB5B,EAAKA,KAAKsD,QACPC,OAAOC,QAAQxD,EAAKA,MAAMyD,KAAI,WAAanD,GAAW,IAAD,mBAAhBD,GAAgB,WACjD,OAAO,cAAC,EAAD,CAASA,IAAKA,EAAiBC,MAAOA,GAAdA,e,gCC1BvD,wDAGe,SAASuB,EAAT,GAAgC,IAAhBN,EAAe,EAAfA,QAAS/B,EAAM,EAANA,KAEpC,OADI+B,EAAQmC,SAAS,kBAAiBnC,EAAU,QAAUA,EAAQoC,MAAM,KAAK,IAEzE,qBAAK/B,UAAU,QAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAS,uBAAkBpC,GAAhC,UACI,mBAAGoC,UAAU,cAAb,SAA4BL,IAC5B,wBAAQK,UAAU,gBAAgBI,QAAS,SAAA4B,GAAC,OAAIA,EAAEC,OAAOC,WAAWA,WAAWC,UAA/E,2B","file":"static/js/11.27eff2e8.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, {useState, useContext} from 'react';\nimport {Link, useHistory} from 'react-router-dom'\nimport Popup from '../Utility/Popup';\nimport {followTag} from '../Api/ActionCreators'; \nimport '../../css/Tags.css'\nimport { UserContext } from '../Context';\n\nexport const TagCard = ({tag, index}) => {\n    const user = useContext(UserContext).userState;\n    const [showPopup, setShowPopup] = useState(false);\n    const [msg, setMsg] = useState();\n    const [type, setType] = useState();\n    \n    const [status, setStatus] = useState(() => {\n        let follows = tag.engagements.find(u => parseInt(u.user_id) === parseInt(user.id))\n        return {\n            follows: follows ? true : false,\n            followers: tag.followers,\n            message: \"\"\n        }\n    })\n    \n    const history = useHistory()\n    return (\n        <div key={index} className=\"tag-card\">\n            {showPopup && <Popup message={msg} type={type} />}\n            <div className=\"card-header\">\n                <Link to={`/tags/${tag.tag_slug}`}><div className=\"tag\">#{tag.tag}</div></Link>\n                <button\n                    onClick={() => {\n                        if(user.isAuthenticated){\n                            followTag(tag.id, user.id).then(res => {\n                                status.follows ? setStatus(res) : setStatus(res);\n                                // console.log(res);\n                                const message = res.follows ? 'Tag Following' : 'Tag Unfollowed';\n                                console.log(message);\n                                setMsg(message);\n                                setType('success');\n                                setShowPopup(true);\n                                setTimeout(() => setShowPopup(false), 2500);\n                            })\n                        }\n                        else {\n                            history.push('/login')\n                        }\n                    }}\n                    className={status.follows ? `form-button active-button follow-tag-${index}` : `form-button unactive-button follow-tag-${index}`}\n                >\n                    {status.follows ? \"FOLLOWING\" : \"FOLLOW\"}\n                </button>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"tag-desc\">{tag.description != null ? tag.description : <span className=\"no-desc\">No description available!</span>}</div>\n                <div className=\"post_count\">{tag.post_count} Posts | {status.followers || 0} Followers</div> \n            </div>\n        </div>\n    )\n}","import React, {useReducer, useEffect} from 'react'\nimport {tagReducer} from '../Api/Reducers';\nimport {fetchTags} from '../Api/ActionCreators'; \nimport '../../css/Auth.css'\nimport '../../css/Tags.css'\nimport Loading from '../Utility/Loading';\nimport { TagCard } from './TagCard';\n\nexport default function TagList(){\n    const [tags, dispatch] = useReducer(tagReducer, {tags: [], loading: true})\n    document.title = 'Tags | CodeUnlock.in';\n    useEffect(() => {\n        fetchTags(dispatch)\n    }, [])\n\n    return (\n        <>\n            {tags.loading ? <Loading /> : \n            <>\n            <div className=\"sec-header\">\n                <i className=\"fas fa-tags\" style={{fontSize: \"18px\", marginRight: \"4px\"}}></i>\n                <span>Tags</span>\n            </div>\n            <div className=\"tag-list\">\n                {tags.tags.length !== 0 && \n                    Object.entries(tags.tags).map(([key, tag], index) => {\n                        return <TagCard tag={tag} key={index} index={index} />            \n                    })\n                }\n            </div>\n            </>\n        }\n        </>\n    )\n}","import React from 'react';\nimport '../../css/Popup.css';\n\nexport default function Popup({message, type}){\n    if (message.includes('Successfully')) message = 'Post ' + message.split(' ')[1];\n    return (\n        <div className=\"inner\">\n            <div className=\"flash-messages\">\n                <div className={`flash flash--${type}`}>\n                    <p className=\"flash__text\">{message}</p>\n                    <button className=\"flash__remove\" onClick={e => e.target.parentNode.parentNode.remove()}>&times;</button>  \n                </div>\n            </div>\n        </div>          \n    )\n}"],"sourceRoot":""}