{"version":3,"sources":["components/Api/Reducers.js","components/Admin/Tag.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Tag","props","useReducer","dispatch","useState","location","tag","setTag","undefined","window","replace","document","title","pathname","split","className","onSubmit","e","preventDefault","updateTag","id","description","then","res","value","name","onChange","target","required","rows","TagPosts","to","tagsToString","tagArr","map","push","join","length","style","overflowX","post","index","post_title","post_status","post_likes","post_bookmarks","formatDate","created_at","post_slug"],"mappings":"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","file":"static/js/18.0934458c.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, { useState, useReducer } from 'react'\nimport \"../../css/Auth.css\";\nimport '../../css/fontawesome/css/all.css';\nimport { Link } from 'react-router-dom';\nimport {formatDate} from '../Hooks';\nimport {tagReducer} from '../Api/Reducers';\nimport {updateTag} from '../Api/ActionCreators';\n\nexport default function Tag(props){\n    // eslint-disable-next-line\n    const [tagRed, dispatch] = useReducer(tagReducer, {})\n    const [tag, setTag] = useState(props.location.state)\n    \n    if(tag === undefined) window.location.replace(\"/admin/tags\")\n    document.title = (tag?.tag ?? window.location.pathname.split(\"/admin/tags/\")[1]) +\" | Tags | Admin | CodeUnlock.in\"\n\n    return (\n        <div className=\"tag-edit\">\n            <form onSubmit={(e) => {\n                e.preventDefault()\n                // console.log(tag)\n                updateTag(tag.id, {tag: tag.tag, description: tag.description}, dispatch)\n                .then(res => window.location.replace(\"/admin/tags\"))\n            }}>\n                <div className=\"form-header\">\n                    <div className=\"form-heading\">TAG</div>\n                </div>\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Tag</label>\n                    <input type=\"text\" value={tag.tag} name=\"tag\" id=\"tag\" onChange={e => setTag({...tag, tag: e.target.value})} required/>\n                </div>\n\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Description</label>\n                    <textarea type=\"text\" rows=\"10\" value={tag.description} name=\"description\" id=\"description\" onChange={e => setTag({...tag, description: e.target.value})} />\n                </div>\n\n                <div className=\"all-posts\">\n                    <label className=\"form-label\">Posts</label>\n                    <TagPosts posts={tag.posts} />\n                </div>\n\n                <div>\n                    <button className=\"form-button\">UPDATE</button>\n                    <Link to=\"/admin/tags\"><button className=\"form-button unactive-button\">BACK</button></Link>    \n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst TagPosts = ({posts}) => {\n    const tagsToString = (tags) => {\n        let tagArr = []\n        if(tags){\n            tags.map(tag => tagArr.push(tag.tag))\n        }\n        return tagArr.join(\", \")\n    }\n\n    return posts?.length === 0 || posts === undefined ?  \n        <div>No posts available</div>\n        :  \n        <table className=\"table\" style={{overflowX: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th className=\"table-col-heading\">Id</th>\n                    <th className=\"table-col-heading\">Title</th>\n                    <th className=\"table-col-heading\">Status</th>\n                    <th className=\"table-col-heading\">Likes</th>\n                    <th className=\"table-col-heading\">Saves</th>\n                    <th className=\"table-col-heading\">Date</th>\n                    <th className=\"table-col-heading\">Edit</th>\n                </tr>\n            </thead> \n            <tbody>\n            {posts?.map((post, index) => {\n                return (\n                    <tr className=\"post-row\" key={index}>\n                        <td>{post.id}</td>\n                        <td>{post.post_title}</td>\n                        <td>{post.post_status ? \"Published\" : \"Draft\"}</td>\n                        <td>{post.post_likes}</td>\n                        <td>{post.post_bookmarks}</td>\n                        <td>{formatDate(post.created_at)}</td>\n                        <td>\n                            <Link to={{\n                                pathname: `/admin/posts/${post.post_slug}`,\n                                state: {...post, tags: tagsToString(post.tags)}\n                            }}>\n                                <i className=\"fas fa-edit\"></i>\n                            </Link>\n                        </td>\n                    </tr>\n                )}\n            )}\n            </tbody>\n        </table>\n}"],"sourceRoot":""}