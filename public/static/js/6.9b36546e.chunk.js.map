{"version":3,"sources":["components/Auth/Verification.js"],"names":["Verify","props","msg","useState","email","setEmail","err","setErr","loading","setLoading","success","setSuccess","className","onSubmit","e","preventDefault","a","sendMailForVerification","res","status","message","error","verification","style","paddingTop","color","type","value","name","id","placeholder","onChange","target","required","Verified","useParams","hash","email_hash","undefined","failed","setFailed","history","useHistory","useEffect","verify","push","pathname","state"],"mappings":"qQAKaA,EAAS,SAAC,GAAgB,IAAZC,EAAW,oBAC3BC,GAAP,OAAcD,QAAd,IAAcA,OAAd,EAAcA,EAAOA,OAAdC,IACP,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAyBA,OACI,sBAAKC,UAAU,QAAf,UACKJ,GAAW,cAAC,IAAD,IACZ,uBAAMI,UAAU,aAAaC,SA1BlB,SAAAC,IACfA,EAAEC,iBACW,KAAVX,GACCG,EAAO,wBAEP,uCACA,4BAAAS,EAAA,6DACIT,EAAO,MACPE,GAAW,GAFf,SAGsBQ,YAAwBb,GAH9C,QAGUc,EAHV,QAIWC,QACHV,GAAW,GACXE,EAAWO,EAAIE,UAGfb,EAAOW,EAAIG,OAEfZ,GAAW,GAXf,2CADA,oDAcAa,IAOA,UACI,sBAAKV,UAAU,cAAcW,MAAO,CAAE,UAAa,SAAUC,WAAY,QAAzE,UACI,qBAAKZ,UAAU,eAAf,kCACA,qBAAKA,UAAU,aAAaW,MAAO,CAACE,MAAO,OAA3C,SAAoDnB,IACpD,qBAAKM,UAAU,aAAaW,MAAO,CAACE,MAAO,SAA3C,SAAsDvB,IACtD,qBAAKU,UAAU,aAAaW,MAAO,CAACE,MAAO,SAA3C,SAAsDf,OAI1D,qBAAKE,UAAU,cAAf,SACI,qBAAKA,UAAU,aAAaW,MAAO,CAACE,MAAO,SAA3C,wCAEJ,sBAAKb,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBAAOc,KAAK,QAAQC,MAAOvB,EAAOwB,KAAK,QAAQC,GAAG,QAAQC,YAAY,mBAAmBC,SAAU,SAAAjB,GAAC,OAAIT,EAASS,EAAEkB,OAAOL,QAAQM,UAAQ,OAE9I,qBAAKrB,UAAU,cAAf,SACI,wBAAQA,UAAU,yCAAlB,2BASPsB,EAAW,WACpB,MAA2BC,cAApBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,WACb,EAA8BlC,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,CAACgB,QAAQ,EAAOjB,SAAKoC,IAA5D,mBAAO5B,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,mBAAS,CAACgB,QAAQ,EAAOb,SAAKgC,IAA1D,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAUC,cAehB,OAbAC,qBAAU,WAAM,4CACZ,4BAAA3B,EAAA,sEACsB4B,YAAOR,EAAMC,GADnC,QACUnB,EADV,QAEWC,QACHV,GAAW,GACXE,EAAW,CAACQ,QAAQ,EAAMjB,IAAKgB,EAAIE,WAGnCoB,EAAU,CAACrB,QAAQ,EAAMb,IAAKY,EAAIG,QAP1C,4CADY,uBAAC,WAAD,wBAWZC,MAGA,gCACCd,GAAW,cAAC,IAAD,IACXE,GAAW+B,EAAQI,KAAK,CAACC,SAAU,WAAYC,MAAO,CAAC7C,IAAKQ,EAAQR,OACpEqC,EAAOpB,QAAUsB,EAAQI,KAAK,CAACC,SAAU,YAAaC,MAAO,CAAC1B,MAAOkB,EAAOjC","file":"static/js/6.9b36546e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { verify, sendMailForVerification } from '../Api/ActionCreators';\nimport Loading from '../Utility/Loading';\n\nexport const Verify = ({...props}) => {\n    const {msg} = props?.props;\n    const [email, setEmail] = useState(\"\")\n    const [err, setErr] = useState(\"\")\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(\"\")\n\n    const submitForm = e => {\n        e.preventDefault()\n        if(email === \"\" ){\n            setErr(\"Email can't be empty\")\n        }\n        else{\n            async function verification(){\n                setErr(null)\n                setLoading(true);\n                const res = await sendMailForVerification(email);\n                if(res.status){\n                    setLoading(false);\n                    setSuccess(res.message);\n                }\n                else{\n                    setErr(res.error)\n                }\n                setLoading(false);\n            }\n            verification();    \n        }\n    }\n\n    return (\n        <div className=\"login\">\n            {loading && <Loading />}\n            <form className=\"login-form\" onSubmit={submitForm}>\n                <div className=\"form-header\" style={{ \"textAlign\": \"center\", paddingTop: \"10px\"}}>\n                    <div className=\"form-heading\">Account Verification</div>\n                    <div className=\"form-error\" style={{color: \"red\"}}>{err}</div>\n                    <div className=\"form-error\" style={{color: \"green\"}}>{msg}</div>\n                    <div className=\"form-error\" style={{color: \"green\"}}>{success}</div>\n                </div>\n                {/* {sendmail && (\n                    <> */}\n                <div className=\"form-header\">\n                    <div className=\"form-error\" style={{color: \"black\"}}>Resend Verification Mail</div>\n                </div>\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Email</label>\n                    <input type=\"email\" value={email} name=\"email\" id=\"email\" placeholder=\"user@account.com\" onChange={e => setEmail(e.target.value)} required/>\n                </div>\n                <div className=\"form-submit\">\n                    <button className=\"form-button login-button active-button\">SEND</button>\n                </div>\n                    {/* </>\n                )} */}\n            </form>\n        </div>\n    )\n}\n\nexport const Verified = () => {\n    const {hash, email_hash} = useParams()\n    const [loading, setLoading] = useState(true);\n    const [success, setSuccess] = useState({status: false, msg: undefined});\n    const [failed, setFailed] = useState({status: false, err: undefined});\n    const history = useHistory();\n\n    useEffect(() => {\n        async function verification(){\n            const res = await verify(hash, email_hash);\n            if(res.status){\n                setLoading(false);\n                setSuccess({status: true, msg: res.message});\n            }\n            else{\n                setFailed({status: true, err: res.error})\n            }\n        }\n        verification();\n    })\n    return (\n        <div>\n        {loading && <Loading />}\n        {success && history.push({pathname: '/u/login', state: {msg: success.msg}})}\n        {failed.status && history.push({pathname: '/u/verify', state: {error: failed.err}})}\n        </div>\n    )\n}"],"sourceRoot":""}