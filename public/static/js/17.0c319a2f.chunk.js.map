{"version":3,"sources":["components/Api/Reducers.js","components/Admin/Posts.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Posts","props","document","title","useReducer","id","post_title","create_at","post_likes","post_bookmarks","dispatchFetch","useEffect","fetchPosts","message","deleteMsg","dispatchDelete","to","className","PostTable","tagsToString","tagArr","forEach","tag","push","join","map","post","index","pathname","match","path","post_slug","parseInt","post_status","formatDate","created_at","published_on","comments_count","style","cursor","onClick","deletePost","then","res","window","location","reload"],"mappings":"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","file":"static/js/17.0c319a2f.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, { useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../../css/Auth.css\";\nimport '../../css/fontawesome/css/all.css';\nimport { deletePost, fetchPosts } from '../Api/ActionCreators';\nimport { postReducer } from '../Api/Reducers';\nimport { formatDate } from '../Hooks';\nimport Loading from '../Utility/Loading';\n\nexport default function Posts(props){\n    document.title =  \"Posts | Admin | CodeUnlock.in\"\n    const [posts, dispatchFetch] = useReducer(postReducer, {\n        posts: [{\n            id: \"\",\n            post_title: \"\",\n            create_at: \"\",\n            post_likes: \"\",\n            post_bookmarks: \"\",\n        }],\n        loading: true\n    })\n    \n    useEffect(()=>{\n        fetchPosts(dispatchFetch, null, 'admin');\n    }, [])\n\n    const [deleteMsg, dispatchDelete] = useReducer(postReducer, {\n        message: \"\"\n    })\n\n    return (\n        <main>\n            {posts.loading ? <Loading /> :\n            <>\n                <Link to=\"/admin/post/create\"><button className=\"form-button active-button\">NEW POST</button></Link>\n                <Link to=\"/admin\"><button className=\"form-button unactive-button\">BACK</button></Link>\n                <div className=\"message\">{deleteMsg.message}</div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th className=\"table-col-heading\">Id</th>\n                            <th className=\"table-col-heading\">Edit</th>\n                            <th className=\"table-col-heading\">Title</th>\n                            <th className=\"table-col-heading\">Status</th>\n                            <th className=\"table-col-heading\">Created On</th>\n                            <th className=\"table-col-heading\">Published On</th>\n                            <th className=\"table-col-heading\">Likes</th>\n                            <th className=\"table-col-heading\">Saves</th>\n                            <th className=\"table-col-heading\">Comments</th>\n                            <th className=\"table-col-heading\">Tags</th>\n                            <th className=\"table-col-heading\">Delete</th>\n                        </tr>\n                    </thead> \n                    <tbody>\n                        <PostTable posts={posts.posts} props={props} dispatchDelete={dispatchDelete}/>\n                    </tbody>\n                </table>\n            </>\n            }\n        </main>\n    )\n}\n\nconst PostTable = ({posts, props, dispatchDelete}) => {\n    const tagsToString = (tags) => {\n        let tagArr = []\n        if(tags){\n            tags.forEach(tag => {\n                tagArr.push(tag.tag)\n            })\n        }\n        return tagArr.join(\", \")\n    }\n\n    return posts?.map((post, index) => {\n        return (\n            <tr className=\"post-row\" key={index}>\n                <td>{post.id}</td>\n                <td>\n                    <Link to={{\n                        pathname: `${props.match.path}/${post.post_slug}`,\n                        state: post//{...post, tags: tagsToString(post.tags)}\n                    }}>\n                        <i className=\"fas fa-edit\"></i>\n                    </Link>\n                </td>\n                <td>{post.post_title}</td>\n                <td>{parseInt(post.post_status) === 0 ? \"Draft\" : \"Published\"}</td>\n                <td>{formatDate(post.created_at)}</td>\n                <td>{post.published_on ? formatDate(post.published_on) : 'Not Published'}</td>\n                <td>{post.post_likes}</td>\n                <td>{post.post_bookmarks}</td>\n                <td>{post.comments_count}</td>\n                <td>{tagsToString(post.tags)}</td>\n                <td style={{cursor: \"pointer\"}}\n                    onClick={() => {\n                        deletePost(post.id, dispatchDelete).then((res) => window.location.reload())\n                        }\n                }>\n                    <i className=\"fas fa-trash-alt\"></i>\n                </td>\n            </tr>\n        );\n    })\n}"],"sourceRoot":""}