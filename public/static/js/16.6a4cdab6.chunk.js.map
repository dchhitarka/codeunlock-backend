{"version":3,"sources":["components/Api/Reducers.js","components/Admin/Users.js","components/Hooks.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Users","props","document","title","useState","setLoading","useReducer","id","name","email","avatar","created_at","updated_at","users","dispatchUsers","message","deleteMsg","dispatchDelete","useEffect","fetchUsers","then","to","className","map","index","formatDate","onClick","deleteUser","useNavbarToggle","date","d","Date","parse","getMonth","getDate","getFullYear"],"mappings":"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","file":"static/js/16.6a4cdab6.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, { useReducer, useEffect, useState } from 'react';\nimport {userReducer} from '../Api/Reducers';\nimport {fetchUsers, deleteUser} from '../Api/ActionCreators';\nimport {formatDate} from '../Hooks';\nimport { Link } from 'react-router-dom';\nimport \"../../css/Auth.css\";\nimport Loading from '../Utility/Loading';\n\nexport default function Users(props){\n    document.title =  \"Users | Admin | CodeUnlock.in\"\n    const [loading, setLoading] = useState(true);\n    const [users, dispatchUsers] = useReducer(userReducer, [{\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        avatar: \"\",\n        created_at: \"\",\n        updated_at: \"\",\n    }])\n    \n    const [deleteMsg, dispatchDelete] = useReducer(userReducer, {\n        message: \"\"\n    })\n\n    useEffect(()=>{\n        fetchUsers(dispatchUsers)\n        .then(() => setLoading(false));\n    }, [])\n\n    // const tagsToString = (tags) => {\n    //     let tagArr = []\n    //     if(tags){\n    //         tags.map(tag => {\n    //             tagArr.push(tag.tag)\n    //         })\n    //     }\n    //     return tagArr.join(\", \")\n    // }\n\n    const tableFormat = () => {\n        return users.map((user, index) => {\n            return (\n                <tr className=\"user-row\" key={index}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    {/* <td>{post.post_likes}</td> */}\n                    {/* <td>{post.post_bookmarks}</td> */}\n                    <td>{formatDate(user.created_at)}</td>\n                    <td>{formatDate(user.updated_at)}</td>\n                    {/* <td>{tagsToString(post.tags)}</td> */}\n                    {/* <td>\n                        <Link to={{\n                            pathname: `${props.match.path}/${post.post_slug}`,\n                            state: {...post, tags: tagsToString(post.tags)}\n                        }}>\n                            Edit\n                        </Link>\n                    </td> */}\n                    <td onClick={() => deleteUser(user.id, dispatchDelete)}>Delete</td>\n                </tr>\n            );\n        })\n    };\n\n    if(loading){\n        return <Loading />\n    }\n    return (\n        <main>\n            <Link to=\"/admin\"><button className=\"form-button unactive-button\">BACK</button></Link>\n            <div className=\"message\">{deleteMsg.message}</div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th className=\"table-col-heading\">Id</th>\n                        <th className=\"table-col-heading\">Name</th>\n                        <th className=\"table-col-heading\">Email</th>\n                        <th className=\"table-col-heading\">Join On</th>\n                        <th className=\"table-col-heading\">Last Login</th>\n                        {/* <th className=\"table-col-heading\">Saves</th>\n                        <th className=\"table-col-heading\">Tags</th>\n                        <th className=\"table-col-heading\">Edit</th> */}\n                        <th className=\"table-col-heading\">Delete</th>\n                    </tr>\n                </thead> \n                <tbody>\n                    {tableFormat()}\n                </tbody>\n            </table>\n        </main>\n    )\n}","import {useState, useEffect} from 'react';\n// import {fetchUser} from './Api/ActionCreators'\n// import {userReducer} from './Api/Reducers'\n\nexport function useUserDetails(d){\n    const [details, setDetails] = useState(\n        {\n            \"id\": null,\n            \"name\": \"\",\n            \"email\": \"\",\n            \"email_verified_at\": null,\n            \"avatar\": \"avatar.svg\",\n            \"created_at\": \"\",\n            \"updated_at\": \"\",\n            \"isAdmin\": 1,\n            \"access_token\": \"\",\n            \"post_engagements\": [\n                {\n                    \"id\": null,\n                    \"user_id\": null,\n                    \"post_id\": null,\n                    \"like\": 0,\n                    \"bookmark\": 0,\n                    \"created_at\": \"\",\n                    \"updated_at\": \"\"\n                },\n            ]\n        }\n    )\n    useEffect(() => {\n        if(details.id != null)\n            localStorage.setItem(\"details\", JSON.stringify(details))\n        // console.log(JSON.parse(sessionStorage.getItem(\"details\")))\n    }, [details])\n    return [details, setDetails]\n}\n\nexport function useNavbarToggle(){\n    const [isVisible, setVisible] = useState(false);\n    return [isVisible, setVisible]\n}\n\nexport const formatDate = date => {\n    let week = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    let d = new Date(Date.parse(date))\n    return `${week[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`\n}\n\n"],"sourceRoot":""}