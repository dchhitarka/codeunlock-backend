{"version":3,"sources":["components/Api/Reducers.js","components/Auth/Login.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Login","props","userContext","useContext","UserContext","userState","useReducer","login","dispatch","useState","email","setEmail","password","setPassword","remember","setRemember","location","err","setErr","setMsg","history","useHistory","useEffect","id","then","setUserState","isAuthenticated","logout","register","localStorage","setItem","access_token","go","push","pathname","sendmail","className","onSubmit","e","preventDefault","userLogin","style","color","value","name","placeholder","onChange","target","required","checked","to"],"mappings":"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","file":"static/js/19.c5c29c22.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, {useState, useReducer, useEffect, useContext} from 'react'\nimport '../../css/Auth.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport Loading from \"../Utility/Loading\"\nimport { userReducer } from '../Api/Reducers'\nimport {userLogin} from \"../Api/ActionCreators\"\nimport { UserContext } from '../Context'\n\nexport default function Login(props){\n    const userContext = useContext(UserContext);\n    const user = userContext.userState;\n    const [login, dispatch] = useReducer(userReducer, {\n        loading: false,\n    })\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [remember, setRemember] = useState(true)\n    const [err, setErr] = useState(props?.location?.state?.err || \"\")\n    const [msg, setMsg] = useState(() => {\n        return (props.location.state && props.location.state.msg) || \"\";\n    })\n\n    const history = useHistory()\n\n    useEffect(() => {\n        if(login?.user?.id != null){\n            user.login(login.user, remember).then(() => {\n                userContext.setUserState({...login.user, isAuthenticated: user.isAuthenticated, login: user.login, logout: user.logout, register: user.register})\n                localStorage.setItem('AUTH_TOKEN', login.user.access_token);\n                history.go(-1);\n            })\n        }\n        else{\n            setErr(`${login?.error?.error ?? login?.user?.error ?? \"\"}`)\n            if(login?.error?.error === \"Account not verified\" || login?.user?.error === \"Account not verified\"){\n                history.push({pathname: \"/u/verify\", state:{msg: \"Verify your account\", sendmail: true}})\n            }\n        }\n    // eslint-disable-next-line\n    }, [login])\n\n    const submitForm = e => {\n        e.preventDefault()\n        setMsg(null)\n        if(email === \"\" || password === \"\"){\n            setErr(\"Email or Password can't be empty\")\n        }\n        else{\n            setErr(null)\n            userLogin({email, password, remember}, dispatch)\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            {login.loading ? <Loading />\n            : <form className=\"login-form\" onSubmit={submitForm}>\n                <div className=\"form-header\">\n                    <div className=\"form-heading\">LOGIN</div>\n                    <div className=\"form-error\">{props?.location?.state?.err || err}</div>\n                    <div className=\"form-error\" style={{color: \"green\"}}>{msg}</div>\n                </div>\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Email</label>\n                    <input type=\"email\" value={email} name=\"email\" id=\"email\" placeholder=\"user@account.com\" onChange={e => setEmail(e.target.value)} required/>\n                </div>\n\n                <div className=\"form-input\">\n                    <label className=\"form-label\">Password</label>\n                    <input type=\"password\" value={password} name=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} required/>\n                </div>\n\n                <div className=\"form-input form-foot\">\n                    <label className=\"form-label remember\">\n                        <input type=\"checkbox\" value={remember} name=\"remember\" id=\"remember\" checked={remember} onChange={e => setRemember(e.target.checked)}/>\n                        <span>Remember Me</span>\n                    </label>\n                    <Link to=\"/u/forgot\" style={{color: \"blue\"}}>Forgot Password</Link>\n                </div>\n\n                <div className=\"form-submit\">\n                    <button className=\"form-button login-button active-button\">LOGIN</button>\n                    <Link to=\"/u/register\"><button className=\"form-button register-button unactive-button\">REGISTER</button></Link>                    \n                </div>\n            </form>\n            }\n        </div>\n    )\n}"],"sourceRoot":""}