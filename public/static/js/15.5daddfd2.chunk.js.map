{"version":3,"sources":["components/Api/Reducers.js","components/Admin/Tags.js","components/Hooks.js"],"names":["postReducer","state","action","type","ActionType","loading","posts","payload","msg","error","tagReducer","tags","userReducer","user","commentReducer","Tags","props","document","title","useReducer","id","tag","create_at","dispatchFetch","message","deleteMsg","dispatchDelete","useEffect","fetchTags","to","className","TagTable","Object","values","map","index","pathname","match","path","tag_slug","formatDate","created_at","user_id","followers","post_count","onClick","deleteTag","then","res","window","location","reload","style","cursor","useNavbarToggle","useState","date","d","Date","parse","getMonth","getDate","getFullYear"],"mappings":"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","file":"static/js/15.5daddfd2.chunk.js","sourcesContent":["import * as ActionType from './ActionTypes'\n\nexport const postReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {loading: true}\n        case ActionType.FETCH_POSTS:\n            return {posts: action.payload, loading: false}\n        case ActionType.FETCH_POST:\n            return {...action.payload, loading: false}\n        case \"EDIT_POST\":\n            return {...action.payload, loading: false}\n        case ActionType.POST_ENGAGE:\n        case ActionType.DELETE_POST:\n            return {...action.payload, loading: false}\n        case ActionType.FAILED:\n            return {msg: action.payload, loading: false, error: true}\n        default:\n            return state\n    }\n}\n\nexport const tagReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_TAGS:\n            return {tags: action.payload, loading: false}\n        case ActionType.DELETE_TAG:\n        case ActionType.FETCH_TAG:\n        case ActionType.TAG_ENGAGE:\n        case ActionType.FAILED:\n            // console.log(action.payload)\n            return {...action.payload, loading: false}\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state, action) => {\n    switch(action.type){\n        case ActionType.LOADING:\n            return {...state, loading: true}\n        case ActionType.FETCH_USERS:\n            return action.payload\n        case ActionType.FETCH_USER:\n            return {user: action.payload, loading: false}\n        case ActionType.DELETE_USER:\n        case ActionType.FAILED:\n            return {user: null, error: action.payload, loading: false}\n        case \"STOP_LOADING\":\n            return { ...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport const commentReducer = (state, action) => {\n    switch(action.type){\n        // case ActionType.LOADING:\n        //     return {...state, loading: true}\n        case ActionType.FETCH_COMMENTS:\n        case ActionType.DELETE_COMMENT:\n        case ActionType.ADD_COMMENT:\n        case ActionType.FAILED:\n            return action.payload\n        default:\n            return state\n    }\n}","import React, { useReducer, useEffect } from 'react';\nimport {tagReducer} from '../Api/Reducers';\nimport {fetchTags, deleteTag} from '../Api/ActionCreators';\nimport {formatDate} from '../Hooks';\nimport { Link } from 'react-router-dom';\nimport \"../../css/Auth.css\";\nimport Loading from '../Utility/Loading';\n\nexport default function Tags(props){\n    document.title =  \"Tags | Admin | CodeUnlock.in\"\n    const [tags, dispatchFetch] = useReducer(tagReducer, {\n        tags: {\n            id: \"\",\n            tag: \"\",\n            user: \"\",\n            create_at: \"\",\n        },\n        loading: true\n    })\n\n    const [deleteMsg, dispatchDelete] = useReducer(tagReducer, {\n        message: \"\"\n    })\n\n    useEffect(()=>{\n        fetchTags(dispatchFetch);\n    }, [])\n\n    return (\n        <main>\n            {tags.loading ? <Loading /> :\n            <>\n                {/* {console.log(tags.tags)} */}\n                <Link to=\"/admin/tag/create\"><button className=\"form-button active-button\">NEW TAG</button></Link>\n                <Link to=\"/admin\"><button className=\"form-button unactive-button\">BACK</button></Link>\n                <div className=\"message\">{deleteMsg.message}</div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th className=\"table-col-heading\">Id</th>\n                            <th className=\"table-col-heading\">Edit</th>\n                            <th className=\"table-col-heading\">Tag</th>\n                            <th className=\"table-col-heading\">Created On</th>\n                            <th className=\"table-col-heading\">User</th>\n                            <th className=\"table-col-heading\">Followers</th>\n                            <th className=\"table-col-heading\">Posts</th>\n                            <th className=\"table-col-heading\">Delete</th>\n                        </tr>\n                    </thead> \n                    <tbody>\n                        <TagTable tags={Object.values(tags.tags)} props={props} dispatchDelete={dispatchDelete}/>\n                    </tbody>\n                </table>\n            </>\n            }\n        </main>\n    )\n}\n\nconst TagTable = ({tags, props, dispatchDelete}) => {\n\n    return tags.map((tag, index) => {\n        return (\n            <tr className=\"tag-row\" key={index}>\n                <td>{tag.id}</td>\n                <td>\n                    <Link to={{\n                        pathname: `${props.match.path}/${tag.tag_slug}`,\n                        state: {...tag}\n                    }}>\n                        <i className=\"fas fa-edit\"></i>\n                    </Link>\n                </td>\n                <td>{tag.tag}</td>\n                <td>{formatDate(tag.created_at)}</td>\n                <td>{tag.user_id}</td>\n                <td>{tag.followers}</td>\n                <td>{tag.post_count}</td>\n                <td onClick={() => deleteTag(dispatchDelete, tag.id)\n                                    .then((res) => {\n                                        // if(typeof res === Object)       \n                                        window.location.reload()\n                                    })\n                            }\n                    style={{cursor: \"pointer\"}}\n                >\n                    <i className=\"fas fa-trash-alt\"></i>\n                </td>\n            </tr>\n        );\n    })\n}","import {useState, useEffect} from 'react';\n// import {fetchUser} from './Api/ActionCreators'\n// import {userReducer} from './Api/Reducers'\n\nexport function useUserDetails(d){\n    const [details, setDetails] = useState(\n        {\n            \"id\": null,\n            \"name\": \"\",\n            \"email\": \"\",\n            \"email_verified_at\": null,\n            \"avatar\": \"avatar.svg\",\n            \"created_at\": \"\",\n            \"updated_at\": \"\",\n            \"isAdmin\": 1,\n            \"access_token\": \"\",\n            \"post_engagements\": [\n                {\n                    \"id\": null,\n                    \"user_id\": null,\n                    \"post_id\": null,\n                    \"like\": 0,\n                    \"bookmark\": 0,\n                    \"created_at\": \"\",\n                    \"updated_at\": \"\"\n                },\n            ]\n        }\n    )\n    useEffect(() => {\n        if(details.id != null)\n            localStorage.setItem(\"details\", JSON.stringify(details))\n        // console.log(JSON.parse(sessionStorage.getItem(\"details\")))\n    }, [details])\n    return [details, setDetails]\n}\n\nexport function useNavbarToggle(){\n    const [isVisible, setVisible] = useState(false);\n    return [isVisible, setVisible]\n}\n\nexport const formatDate = date => {\n    let week = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    let d = new Date(Date.parse(date))\n    return `${week[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`\n}\n\n"],"sourceRoot":""}